#!/usr/bin/env bash

opwd=$PWD
cd -- "$(dirname "$(readlink "$0" || echo "$0")")" || exit $?
cd .. || exit $?
source ./utils.lib.bash || exit $?

usage() {
    echo >&2 "USAGE: $0 [-z] [-k] [{<testcase dir> | <test program> <test input>}]"
    exit 2
}

declare -a ISEKAI_ARGS=()
declare -i OUTPUT_BIT_WIDTH=64
declare -i KEEP_GOING=0
while [[ "$1" == -* ]]; do
    case "$1" in
    -z)
        ISEKAI_ARGS+=( --primary-backend )
        OUTPUT_BIT_WIDTH=32
        ;;
    -k)
        KEEP_GOING=1
        ;;
    *)
        usage
        ;;
    esac
    shift
done

# $1: test case directory
run_on_dir() {
    utils_test_case_prepare "$1" || exit $?
    local f rc
    for f in "$1"/*.in; do
        echo >&2 "{{<<==--•• RUNNING ON “$f” ••--==>>}}"
        rc=0
        utils_test_case_run "$f" "$OUTPUT_BIT_WIDTH" "${ISEKAI_ARGS[@]}" || rc=$?
        if (( rc != 0 && ! KEEP_GOING )); then
            exit $rc
        fi
    done
}

# $1: source file
# $2: file with input values
run_on_pair() {
    utils_test_case_prepare_for_file "$1" || exit $?
    utils_test_case_run "$2" "$OUTPUT_BIT_WIDTH" "${ISEKAI_ARGS[@]}" || exit $?
}

case "$#" in
0)
    for d in "$utils_BACKEND_TEST_ROOT"/testcases/*/; do
        run_on_dir "${d%/}"
    done
    ;;
1)
    d=$(utils_resolve_relative "$1" "$opwd")
    run_on_dir "$d"
    ;;
2)
    src=$(utils_resolve_relative "$1" "$opwd")
    in=$(utils_resolve_relative "$2" "$opwd")
    run_on_pair "$src" "$in"
    ;;
*)
    usage
    ;;
esac

utils_cleanup
